# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

# run on pull requests targeting main and pushes to any branch
on:
  pull_request:
    branches: [ $default-branch ]
    paths:
      - src/backend/**
      - .github/workflows/node.yaml
  push:
    paths:
      - src/backend/**
      - .github/workflows/node.yaml

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test-node:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Start MySQL
      run: sudo service mysql start

    - name: Import CI database into runner MySQL
      # the password is in plaintext and that's fine, see below
      run: mysql -u root -proot < ${GITHUB_WORKSPACE}/src/backend/Database/GetGrinnected_CI_Data.sql

    - name: Test with npm
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        cache: 'npm'

    - name: Fresh-install packages
      run: npm ci

    - name: Run tests
      run: npm test

      # set the env so it runs correctly, this replaces a .env file.
      # all of these secrets are in plaintext, but they're just for CI and 
      # never reused elsewhere so it's not a concern.
      env:
        # jwt generation and verification
        REFRESH_TOKEN_SECRET: "fe5e20424416460f194fa331b32c11d8"
        ACCESS_TOKEN_SECRET: "8a771256633a8458a464733ea2113a39"
        # connection to the database
        MYSQL_HOST: localhost
        MYSQL_USER: root
        MYSQL_PASSWORD: root
        MYSQL_DATABASE: GetGrinnected
